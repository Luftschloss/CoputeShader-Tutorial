#pragma kernel ViewPortCulling

uint instanceCount;
StructuredBuffer<float4x4> input;
float4 planes[6];
AppendStructuredBuffer<float4x4> cullresult;


bool IsOutsidePlane(float4 plane, float3 pointPos)
{
    return dot(plane.xyz, pointPos) + plane.w > 0;
}

[numthreads(640, 1 ,1)]
void ViewPortCulling(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= instanceCount)
        return;
    float4x4 trs = input[id.x];
    //草的Bounds
    float3 boundMin = float3(-0.45, 0, -0.225);
    float3 boundMax = float3(0.45, 1.05, 0.225);
    float4 obbBound[8]; 
    obbBound[0] = mul(trs, float4(boundMin,1));
    obbBound[1] = mul(trs, float4(boundMax,1));
    obbBound[2] = mul(trs, float4(boundMax.x, boundMax.y, boundMin.z, 1));
    obbBound[3] = mul(trs, float4(boundMax.x, boundMin.y, boundMax.z, 1));
    obbBound[4] = mul(trs, float4(boundMin.x, boundMax.y, boundMax.z, 1));
    obbBound[5] = mul(trs, float4(boundMax.x, boundMin.y, boundMin.z, 1));
    obbBound[6] = mul(trs, float4(boundMin.x, boundMax.y, boundMin.z, 1));
    obbBound[7] = mul(trs, float4(boundMin.x, boundMin.y, boundMax.z, 1));

    for (int i = 0; i < 6; i++)
    {
        for (int j = 0; j < 8; j++)
        {
            float3 boundPosition = obbBound[j].xyz;

            if (!IsOutsidePlane(planes[i], boundPosition))
                break;
            if (j == 7)
                return;
        }
    }
    cullresult.Append(trs);
}
